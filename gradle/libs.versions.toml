[versions]
agp = "8.10.1"
androidx-activityCompose = "1.10.1"
androidx-appcompat = "1.7.0"
androidx-lifecycle = "2.8.4"
androidx-material = "1.12.0"

coilNetworkKtor3 = "3.2.0"
compose-multiplatform = "1.8.0"
composeWebviewMultiplatform = "1.9.40"
constraintlayoutComposeMultiplatform = "0.5.1"
fastkv = "2.6.0"
kotlin = "2.1.21"
kotlinx-coroutines = "1.10.2"
kotlinxDatetime = "0.6.2"
krypto = "4.0.10"
mediampAll = "0.0.29"
multiplatformSettings = "1.3.0"
napier = "2.7.1"

ktor = "3.1.3"
logback = "1.5.18"
okio = "3.11.0"
pagingComposeCommon = "3.3.0-alpha02-0.5.1"
sonner = "0.3.8"
material3-adaptive = "1.1.0"

kotlinx-serialization = "1.8.1"
uiToolingPreviewAndroid = "1.8.2"
voyagerNavigator = "1.1.0-beta03"
media3Exoplayer = "1.7.1"

[libraries]
# Gradle plugins
android-gradle-plugin = { module = "com.android.tools.build:gradle", version.ref = "agp" }
android-library-gradle-plugin = { module = "com.android.library:com.android.library.gradle.plugin", version.ref = "agp" }
android-application-gradle-plugin = { module = "com.android.application:com.android.application.gradle.plugin", version.ref = "agp" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
compose-multiplatfrom-gradle-plugin = { module = "org.jetbrains.compose:org.jetbrains.compose.gradle.plugin", version.ref = "compose-multiplatform" }
kotlin-compose-compiler-gradle-plugin = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }

#comon libraries
#只能在fleet预览 那我不用了
components-ui-tooling-preview = { module = "org.jetbrains.compose.components:components-ui-tooling-preview", version.ref = "compose-multiplatform" }
#webview 在desktop需要额外配置
compose-webview-multiplatform = { module = "io.github.kevinnzou:compose-webview-multiplatform", version.ref = "composeWebviewMultiplatform" }
#coil 异步图片加载库
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coilNetworkKtor3" }
coil-network-ktor3 = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coilNetworkKtor3" }
#kotlinx跨平台时间工具库
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
#viewmodel
lifecycle-viewmodel-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
#跨平台导航栏 可以代替使用implementation(compose.material3AdaptiveNavigationSuite)
material3-adaptive-navigation-suite = { module = "org.jetbrains.compose.material3:material3-adaptive-navigation-suite", version = "compose-multiplatform" }
#音视频播放器
mediamp-all = { module = "org.openani.mediamp:mediamp-all", version.ref = "mediampAll" }
#跨平台存储框架
multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
#跨平台日志框架
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
#ok系列的IO工具
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
#导航库
voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyagerNavigator" }
voyager-transitions = { module = "cafe.adriel.voyager:voyager-transitions", version.ref = "voyagerNavigator" }
#跨平台加密
krypto = { module = "com.soywiz.korlibs.krypto:krypto", version.ref = "krypto" }

#约束布局
constraintlayout-compose-multiplatform = { module = "tech.annexflow.compose:constraintlayout-compose-multiplatform", version.ref = "constraintlayoutComposeMultiplatform" }
#跨平台分页加载
paging-compose-common = { module = "app.cash.paging:paging-compose-common", version.ref = "pagingComposeCommon" }
#toast
sonner = { module = "io.github.dokar3:sonner", version.ref = "sonner" }

#kotlin序列化
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-serialization-protobuf = { module = "org.jetbrains.kotlinx:kotlinx-serialization-protobuf", version.ref = "kotlinx-serialization" }

#android
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
androidx-material = { group = "com.google.android.material", name = "material", version.ref = "androidx-material" }
androidx-ui-tooling-preview-android = { group = "androidx.compose.ui", name = "ui-tooling-preview-android", version.ref = "uiToolingPreviewAndroid" }
fastkv = { module = "io.github.billywei01:fastkv", version.ref = "fastkv" }

#ios
kotlinx-coroutines-swing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }

#server
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }

#ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
#序列化用
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
#ktor引擎 每个引擎功能和平台都不太一样
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
#打印
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
androidx-media3-exoplayer = { group = "androidx.media3", name = "media3-exoplayer", version.ref = "media3Exoplayer" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
androidKotlinMultiplatformLibrary = { id = "com.android.kotlin.multiplatform.library", version.ref = "agp" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
